#  Copyright (c) 2019 Manuel Peuster <manuel@peuster.de
#  Copyright (c) 2019 SONATA-NFV, 5GTANGO, Paderborn University
# ALL RIGHTS RESERVED.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Neither the name of the SONATA-NFV, 5GTANGO, Paderborn University
# nor the names of its contributors may be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# This work has also been performed in the framework of the 5GTANGO project,
# funded by the European Commission under Grant number 761493 through
# the Horizon 2020 and 5G-PPP programmes. The authors would like to
# acknowledge the contributions of their colleagues of the SONATA
# partner consortium (www.5gtango.eu).

import unittest
import ietf_ped_model as generated_model
import yaml
import os
import pyangbind.lib.pybindJSON as pybindJSON


MODEL_NAME = "ietf_ped_catalog"
EXAMPLE_DIR = "examples/"


def check_against_model(yaml_path):
    """
    Open a given YAML file and tries to load it into
    model that was generated by pyangbind.
    Fails if the YAML file is not compatible to the
    model.
    """
    with open(yaml_path, "r") as f:
        ped_data = yaml.load(f)
        ped_model = pybindJSON.loads_ietf(
            ped_data, generated_model, MODEL_NAME)
        #  print(ped_model.ped.name)  # example how to use model
        return ped_model


class TestStringMethods(unittest.TestCase):

    def test_example_peds_against_model(self):
        # collect all example PED files which should be checked against model
        example_peds = os.listdir(EXAMPLE_DIR)
        # check each PED file against the model
        print("Validating: {} PED files.".format(len(example_peds)))
        for ep in example_peds:
            self.assertIsNotNone(
                check_against_model(os.path.join(EXAMPLE_DIR, ep)))
            print("File: '{}' is valid against model '{}'."
                  .format(ep, MODEL_NAME))
